{"ts":1352268800452,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"//Lamog, Rob\n//Lab #4A\n//Section #0245 MW 9am-11am\n\n#include <iostream>\n#include <sstream>\n#include <string>\n\nusing namespace std;\n\nint main() {\n    \n\tint userInt = 0;\n\tstring strInput;\n\tsize_t found;\n\tint isDivisible, isPerfect;\n\tint i, j; //counters\n\t\n\tdo {\n\t\tcout << \"Enter an integer from 1 to 1000 or \\'0\\' to quit: \\n\";\n\t\tgetline (cin, strInput);\n\t\t//cout << strInput << endl;\n\n\t\tif (strInput == \"0\") break;\n\t\t\n\t\t//Convert string to integer.\n\t\tstringstream(strInput) >> userInt;\n\t\t//cout << userInt << endl;\n\t\t\n\t\t//Search string input for decimal/period.\n\t\tfound=strInput.find('.');\n\t\t\n\t\tif (found!=string::npos) {\n\t\t\tcout << strInput << \" is not a valid entry.\\n\";\n\t\t\n\t\t//Check if user input is outside of 0 and 1000.\n\t\t} else if (userInt < 0 || userInt > 1000) {\n\t\t\tcout << strInput << \" is not a valid entry.\\n\";\n\t\t\t\n\t\t} else {\n\t\t\t//Loop through all possible divisors of user input.\n\t\t\tfor (i = 1, j = 0, isDivisible = 0, isPerfect = 0; userInt != i; i++) {\n\t\t\t\tisDivisible = userInt % i; //Checking if user input is evenly divisible.\n\t\t\t\tif (isDivisible == 0) {\n\t\t\t\t\tisPerfect = isPerfect + i; //Checking if user input is perfect.\n\t\t\t\t\tj++; //Counting number of times user input is evenly divisible.\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t//cout << userInput << \" \" << isDivisible << \" \" << i << \" \" << j << endl;\n\t\t\t}\n\t\t\t\n\t\t\t//One is a unique number.\n\t\t\tif (userInt == 1) cout << userInt << \" is neither perfect or prime.\" << endl;\n\t\t\t\n\t\t\t//With only one even divisor, number is prime.\n\t\t\tif (j == 1) cout << userInt << \" is prime.\" << endl;\n\t\t\t\n\t\t\t//Number is perfect if even divisors add up to userInput.\n\t\t\tif (userInt == isPerfect) {\n\t\t\t\tcout << userInt << \" is perfect.\" << endl;\n\t\t\t\tcout << \"Divisors include:\" << endl;\n\t\t\t\t\n\t\t\t\t//Initialize counters\n\t\t\t\ti = 1; j = 0;\n\t\t\t\t\n\t\t\t\twhile (userInt != i) {\n\t\t\t\t\tisDivisible = userInt % i;\n\t\t\t\t\tif (isDivisible == 0) {\n\t\t\t\t\t\tcout << \"\\t\" << i;\n\t\t\t\t\t\tj++;\n\t\t\t\t\t\tif ((j % 6) == 0) cout << endl;\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tcout << endl;\n\t\t\t\n\t\t\t//Number must not be prime.\n\t\t\t} else if (j > 1) {\n\t\t\t\tcout << userInt << \" is not prime.\" << endl;\n\t\t\t\tcout << \"Divisors include:\" << endl;\n\t\t\t\t\n\t\t\t\t//Initialize counters\n\t\t\t\ti = 1; j = 0;\n\t\t\t\t\n\t\t\t\twhile (userInt != i) {\n\t\t\t\t\tisDivisible = userInt % i;\n\t\t\t\t\tif (isDivisible == 0) {\n\t\t\t\t\t\tcout << \"\\t\" << i;\n\t\t\t\t\t\tj++;\n\t\t\t\t\t\tif ((j % 6) == 0) cout << endl;\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t}\n\t} while (strInput != \"0\"); //Loop until 0 is entered.\n\tcout << \"You have entered 0. Thank you for playing.\\n\";\n\n//\tsystem(\"pause\");\n\treturn 0;\n}"]],"start1":0,"start2":0,"length1":0,"length2":2530}]],"length":2530}
{"contributors":[],"silentsave":false,"ts":1352268805236,"patch":[[{"diffs":[[0," {\n    \n"],[-1,"\t"],[1,"    "],[0,"int user"]],"start1":142,"start2":142,"length1":17,"length2":20},{"diffs":[[0,"\n\t\tfound"],[-1,"="],[1," = "],[0,"strInput"]],"start1":563,"start2":563,"length1":17,"length2":19},{"diffs":[[0,"f (found"],[1," "],[0,"!="],[1," "],[0,"string::"]],"start1":600,"start2":600,"length1":18,"length2":20},{"diffs":[[0,"ct.\" << endl"],[-1,";"],[0,"\n\t\t\t\t"],[-1,"cout "],[1,"\t"],[0,"<< \"Divisors"]],"start1":1666,"start2":1666,"length1":35,"length2":30},{"diffs":[[0,"endl"],[-1,";"],[0,"\n\t\t\t\t"],[-1,"cout "],[1,"\t"],[0,"<< \""]],"start1":2074,"start2":2074,"length1":19,"length2":14}]],"length":2527,"saved":false}
